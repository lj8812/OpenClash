name: Single Branch OpenClash Builder

on: 
  push:
    branches:
      - dev
    paths:
      - 'luci-app-openclash/Makefile'
  workflow_dispatch:

jobs:
  Version-Check:
    runs-on: ubuntu-latest
    outputs:
      need_build: ${{ steps.check.outputs.need_build }}
      version: ${{ steps.version.outputs.value }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          path: main-repo

      - name: Get New Version
        id: version
        run: |
          VERSION=$(grep 'PKG_VERSION:=' ./main-repo/luci-app-openclash/Makefile | awk -F '=' '{print $2}')
          echo "value=$VERSION" >> $GITHUB_OUTPUT

      - name: Version Comparison
        id: check
        run: |
          CURRENT_VERSION=$(curl -s https://raw.githubusercontent.com/${{ github.repository }}/dev/version.txt || echo "0")
          if [ "${{ steps.version.outputs.value }}" != "$CURRENT_VERSION" ]; then
            echo "need_build=true" >> $GITHUB_OUTPUT
          else
            echo "need_build=false" >> $GITHUB_OUTPUT
          fi

  Build-Process:
    runs-on: ubuntu-latest
    needs: Version-Check
    if: ${{ needs.Version-Check.outputs.need_build == 'true' }}
    steps:
      - name: Prepare Workspace
        run: |
          mkdir -p openwrt-sdk
          mkdir -p artifacts

      - name: Setup SDK
        run: |
          curl -sSL https://downloads.openwrt.org/snapshots/targets/x86/64/openwrt-sdk-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst | \
          zstdcat - | tar -xC openwrt-sdk --strip-components=1

      - name: Inject Source Code
        run: |
          cp -r ./main-repo/luci-app-openclash ./openwrt-sdk/package/
          mkdir -p ./openwrt-sdk/package/luci-app-openclash/files/etc/openclash/core

      - name: Deploy Core Components
        run: |
          CORE_DIR="./openwrt-sdk/package/luci-app-openclash/files/etc/openclash/core"
          
          # 下载Clash核心
          curl -L https://release.dreamacro.workers.dev/latest/clash-linux-amd64-v3.zip -o $CORE_DIR/clash.zip
          unzip -oj $CORE_DIR/clash.zip -d $CORE_DIR/
          rm $CORE_DIR/clash.zip

          # 下载Clash Meta
          LATEST_META=$(curl -s https://api.github.com/repos/MetaCubeX/Clash.Meta/releases/latest | grep browser_download_url | grep linux-amd64 | cut -d '"' -f 4)
          curl -L $LATEST_META -o $CORE_DIR/meta.gz
          gzip -d $CORE_DIR/meta.gz
          mv $CORE_DIR/meta $CORE_DIR/clash_meta
          chmod +x $CORE_DIR/*

      - name: Compile Package
        run: |
          cd openwrt-sdk
          make defconfig
          make package/luci-app-openclash/compile V=s
          cp bin/packages/x86_64/base/luci-app-openclash_*_x86_64.ipk ../artifacts/

      - name: Publish Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: openclash-package
          path: artifacts/*.ipk

      - name: Update Version Record
        run: |
          echo "${{ needs.Version-Check.outputs.version }}" > version.txt
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add version.txt
          git commit -m "Update to version ${{ needs.Version-Check.outputs.version }}"
          git push
